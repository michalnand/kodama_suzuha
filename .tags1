!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	0	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
CKodama	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^CKodama::CKodama()$/;"	function	line:4	class:CKodama	signature:()
~CKodama	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^CKodama::~CKodama()$/;"	function	line:9	class:CKodama	signature:()
init	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^int32_t CKodama::init()$/;"	function	line:14	class:CKodama	signature:()
init_	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^int32_t CKodama::init_()$/;"	function	line:36	class:CKodama	signature:()
sensor_get	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^int32_t CKodama::sensor_get(uint32_t sensor_id)$/;"	function	line:70	class:CKodama	signature:(uint32_t sensor_id)
sensor_read	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^void CKodama::sensor_read()$/;"	function	line:77	class:CKodama	signature:()
comm_send	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^int32_t CKodama::comm_send( unsigned char *tx_buffer, uint32_t tx_buffer_length,$/;"	function	line:82	class:CKodama	signature:( unsigned char *tx_buffer, uint32_t tx_buffer_length, unsigned char *rx_buffer, uint32_t rx_buffer_length)
rotate_robot	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^void CKodama::rotate_robot(int32_t angle, int32_t speed, int32_t (*terminating_func)())$/;"	function	line:94	class:CKodama	signature:(int32_t angle, int32_t speed, int32_t (*terminating_func)())
go_forward	/home/michal/programming/kodama_suzuha/src/kodama/kodama.cpp	/^void CKodama::go_forward(int32_t distance, int32_t speed, int32_t (*terminating_func)())$/;"	function	line:140	class:CKodama	signature:(int32_t distance, int32_t speed, int32_t (*terminating_func)())
